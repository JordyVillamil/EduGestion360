# edugestion360-fullstack/docker-compose.yml
version: '3.8'

services:
  db:
    image: mysql:8.0 # Usaremos MySQL 8.0
    container_name: edugestion360_mysql
    command: --default-authentication-plugin=mysql_native_password # Compatibilidad con versiones antiguas de clientes
    environment:
      MYSQL_DATABASE: edugestion360_db # Nombre de la base de datos
      MYSQL_ROOT_PASSWORD: root_password # Contraseña para el usuario root (¡Cambiar en producción!)
      MYSQL_USER: django_user # Usuario para Django
      MYSQL_PASSWORD: django_password # Contraseña para el usuario de Django (¡Cambiar en producción!)
    ports:
      - "3306:3306" # Mapea el puerto 3306 del contenedor al 3306 de tu máquina local
    volumes:
      - db_data:/var/lib/mysql # Persistencia de datos de la base de datos
    healthcheck: # Comprobación de salud para esperar a que MySQL esté listo
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./backend # Dockerfile para el backend está en la carpeta 'backend'
      dockerfile: Dockerfile
    container_name: edugestion360_django
    command: gunicorn edugestion360_backend.wsgi:application --bind 0.0.0.0:8000 # Comando para ejecutar Django con Gunicorn
    volumes:
      - ./backend:/app # Monta el código fuente de Django en el contenedor
    ports:
      - "8000:8000" # Mapea el puerto 8000 del contenedor al 8000 de tu máquina local
    environment: # Variables de entorno para Django
      DJANGO_SETTINGS_MODULE: edugestion360_backend.settings.development # Usaremos un archivo de settings para desarrollo
      DATABASE_NAME: edugestion360_db
      DATABASE_USER: django_user
      DATABASE_PASSWORD: django_password
      DATABASE_HOST: db # El nombre del servicio de la base de datos en Docker Compose
      DATABASE_PORT: 3306
      DJANGO_DEBUG: "True"
      DJANGO_SECRET_KEY: "your-secret-key-here" # ¡Genera una clave secreta fuerte para producción!
      DJANGO_ALLOWED_HOSTS: "*" # Permitir todas las conexiones para desarrollo (¡Cambiar en producción!)
      CORS_ALLOWED_ORIGINS: "http://localhost:5173" # Origen de tu frontend React para CORS
    depends_on: # Asegura que la DB se inicie antes que el backend
      db:
        condition: service_healthy # Espera hasta que el healthcheck de la DB sea exitoso

volumes:
  db_data: # Define el volumen persistente para los datos de la DB